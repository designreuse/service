<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lives.platform.web.mapper.UserInfoMapper" >
  <resultMap id="BaseResultMap" type="com.lives.platform.web.entity.UserInfo" >
    <id column="user_info_id" property="userInfoId" jdbcType="INTEGER" />
    <result column="user_info_name" property="userInfoName" jdbcType="VARCHAR" />
    <result column="user_password" property="userPassword" jdbcType="VARCHAR" />
    <result column="employee_id" property="employeeId" jdbcType="INTEGER" />
    <result column="stores_id" property="storesId" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_info_id, user_info_name, user_password, employee_id, stores_id, role_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from pt_user_info
    where user_info_id = #{userInfoId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from pt_user_info
    where user_info_id = #{userInfoId,jdbcType=INTEGER}
  </delete>
  
  <delete id="deleteEmployeeId" parameterType="java.lang.Integer" >
    delete from pt_user_info
    where employee_id = #{employeeId,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.lives.platform.web.entity.UserInfo" >
    insert into pt_user_info (user_info_id, user_info_name, user_password, 
      employee_id, stores_id, role_id
      )
    values (#{userInfoId,jdbcType=INTEGER}, #{userInfoName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, 
      #{employeeId,jdbcType=INTEGER}, #{storesId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lives.platform.web.entity.UserInfo" >
    insert into pt_user_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userInfoId != null" >
        user_info_id,
      </if>
      <if test="userInfoName != null" >
        user_info_name,
      </if>
      <if test="userPassword != null" >
        user_password,
      </if>
      <if test="employeeId != null" >
        employee_id,
      </if>
      <if test="storesId != null" >
        stores_id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userInfoId != null" >
        #{userInfoId,jdbcType=INTEGER},
      </if>
      <if test="userInfoName != null" >
        #{userInfoName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null" >
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="employeeId != null" >
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="storesId != null" >
        #{storesId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lives.platform.web.entity.UserInfo" >
    update pt_user_info
    <set >
      <if test="userInfoName != null" >
        user_info_name = #{userInfoName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null" >
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="employeeId != null" >
        employee_id = #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="storesId != null" >
        stores_id = #{storesId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
    </set>
    where user_info_id = #{userInfoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lives.platform.web.entity.UserInfo" >
    update pt_user_info
    set user_info_name = #{userInfoName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      employee_id = #{employeeId,jdbcType=INTEGER},
      stores_id = #{storesId,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER}
    where user_info_id = #{userInfoId,jdbcType=INTEGER}
  </update>
</mapper>