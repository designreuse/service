<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lives.manage.web.mapper.RoleInfoMapper" >
  <resultMap id="BaseResultMap" type="com.lives.manage.web.entity.RoleInfo" >
    <id column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="customer_id" property="customerId" jdbcType="INTEGER" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="order_no" property="orderNo" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="CHAR" />
    <result column="creater_id" property="createrId" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="CHAR" />
    <result column="updater_id" property="updaterId" jdbcType="INTEGER" />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    role_id, customer_id, role_name, order_no, create_time, creater_id, update_time, 
    updater_id, is_delete
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from m_role_info
    where role_id = #{roleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from m_role_info
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lives.manage.web.entity.RoleInfo" >
    insert into m_role_info (role_id, customer_id, role_name, 
      order_no, create_time, creater_id, 
      update_time, updater_id, is_delete
      )
    values (#{roleId,jdbcType=INTEGER}, #{customerId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, 
      #{orderNo,jdbcType=INTEGER}, #{createTime,jdbcType=CHAR}, #{createrId,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=CHAR}, #{updaterId,jdbcType=INTEGER}, #{isDelete,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lives.manage.web.entity.RoleInfo" >
    insert into m_role_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createrId != null" >
        creater_id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updaterId != null" >
        updater_id,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=CHAR},
      </if>
      <if test="createrId != null" >
        #{createrId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=CHAR},
      </if>
      <if test="updaterId != null" >
        #{updaterId,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lives.manage.web.entity.RoleInfo" >
    update m_role_info
    <set >
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=CHAR},
      </if>
      <if test="createrId != null" >
        creater_id = #{createrId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=CHAR},
      </if>
      <if test="updaterId != null" >
        updater_id = #{updaterId,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lives.manage.web.entity.RoleInfo" >
    update m_role_info
    set customer_id = #{customerId,jdbcType=INTEGER},
      role_name = #{roleName,jdbcType=VARCHAR},
      order_no = #{orderNo,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=CHAR},
      creater_id = #{createrId,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=CHAR},
      updater_id = #{updaterId,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
   
  <select id="queryRole" resultType="com.lives.manage.web.dto.RoleInfoDto" parameterType="com.lives.manage.web.dto.RoleInfoDto">
     select i.role_id,i.role_name,i.order_no,
     (select u1.user_name from m_user_account u1 where i.creater_id=u1.user_id) creater,
     (select u2.user_name from m_user_account u2 where i.updater_id=u2.user_id) updater,
     i.create_time,i.update_time from m_role_info i
   </select>
</mapper>