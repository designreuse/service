<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lives.manage.web.mapper.UserAccountMapper" >

  <resultMap id="BaseResultMap" type="com.lives.manage.web.entity.UserAccount" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="customer_id" property="customerId" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="CHAR" />
    <result column="creater_id" property="createrId" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="CHAR" />
    <result column="updater_id" property="updaterId" jdbcType="INTEGER" />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, customer_id, role_id, user_name, password, create_time, creater_id, update_time, 
    updater_id, is_delete, salt
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from m_user_account
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from m_user_account
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert"  useGeneratedKeys="true" keyProperty="userId" parameterType="com.lives.manage.web.entity.UserAccount" >
   insert into m_user_account (user_id, customer_id, role_id, 
      user_name, password, create_time, 
      creater_id, update_time, updater_id, 
      is_delete, salt)
    values (#{userId,jdbcType=INTEGER}, #{customerId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, 
      #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{createTime,jdbcType=CHAR}, 
      #{createrId,jdbcType=INTEGER}, #{updateTime,jdbcType=CHAR}, #{updaterId,jdbcType=INTEGER}, 
      #{isDelete,jdbcType=INTEGER}, #{salt,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lives.manage.web.entity.UserAccount" >
    insert into m_user_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createrId != null" >
        creater_id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updaterId != null" >
        updater_id,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="salt != null" >
        salt,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=CHAR},
      </if>
      <if test="createrId != null" >
        #{createrId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=CHAR},
      </if>
      <if test="updaterId != null" >
        #{updaterId,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lives.manage.web.entity.UserAccount" >
    update m_user_account
    <set >
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=CHAR},
      </if>
      <if test="createrId != null" >
        creater_id = #{createrId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=CHAR},
      </if>
      <if test="updaterId != null" >
        updater_id = #{updaterId,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lives.manage.web.entity.UserAccount" >
     update m_user_account
    set customer_id = #{customerId,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=CHAR},
      creater_id = #{createrId,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=CHAR},
      updater_id = #{updaterId,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=INTEGER},
      salt = #{salt,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <select id="getlistUser"  resultType="com.lives.manage.web.dto.UserInfoDto" parameterType="com.lives.manage.web.dto.UserInfoDto" >
  select i.user_id userId,i.customer_id customerId,i.role_id roleId,i.user_name userName,i.create_time createTime,
  (select user_name from m_user_account p where p.creater_id=i.user_id) as creater,
  (select user_name from m_user_account p1 where p1.updater_id=i.user_id) as updater ,
  t.nick_name nickName,t.head_img headImg,t.birthday birthday,t.real_name realName,t.sex,t.email,t.mobile 
  from m_user_account i
   left join m_user_info t on t.user_id=i.user_id
  </select> 
</mapper>